{"version":3,"sources":["img/logo.svg","components/Logo.js","components/MenuBar.js","components/Header.js","components/Footer.js","components/Hero.js","components/Movie.js","components/MovieGraid.js","utils/helper.js","pages/HomePage.js","components/Filter.js","pages/CategoryPage.js","pages/SearchPage.js","pages/Details.js","App.js","utils/serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","props","react_default","a","createElement","react_router_dom","className","classes","exact","to","src","logo","width","defaultProps","Links","Header","state","searchTerm","onChangeHandler","e","target","value","_this","setState","origin","location","pathname","includes","history","push","concat","role","type","id","htmlFor","components_Logo","MenuBar","active","defaultValue","this","name","placeholder","onChange","React","Component","withRouter","Footer","trimExtension","filename","split","slice","Hero","_ref","slides","_useState","useState","_useState2","Object","slicedToArray","current","setCurrent","length","nextSlider","clearTimeout","Time","setTimeout","Array","isArray","Fragment","index_esm","onClick","movies","map","slide","index","key","style","backgroundImage","backdropPath","movieLanguages","title","overview","posterPath","Movie","movie","alt","originalTitle","voteAverage","MovieGraid","movieList","limit","components_Movie","gridType","suggestedMovies","data","filter","mostViwed","toConsumableArray","sort","movie1","movie2","popularity","recentRelease","category","date1","date2","Date","releaseDate","HomePage","components_Hero","Data","components_MovieGraid","language","Filter","classCallCheck","_super","call","bind","assertThisInitialized","event","onSelectChange","optionText","CategoryPage","onFilter","renderMoviesGrid","typeText","renderFilterResult","filteredMovies","genres","components_Filter","SearchPage","_this2","searchResult","regex","RegExp","match","params","keyword","originalOverview","Details","movieId","find","join","movieVideos","frameBorder","getMovieTitle","getMovieOverview","App","components_Header","react_router","path","render","pages_HomePage","assign","pages_CategoryPage","pages_Details","pages_SearchPage","components_Footer","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.202a8bdd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.37a8bc92.svg\";","import React from 'react'\r\nimport logo from '../img/logo.svg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Logo = props =>{\r\n    return (\r\n          <NavLink className={props.classes} exact to=\"/netflux\">\r\n            <img src={logo} width='80'/>\r\n          </NavLink>\r\n        )\r\n}\r\nLogo.defaultProps = {\r\nclasses:'navbar-item'\r\n}\r\nexport default Logo;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Links = () =>{\r\n\r\n    return(\r\n                     <ul className='navbar-menu'>\r\n                        <li>\r\n                          <NavLink className='navbar-item' exact to=\"/netflux\">\r\n                              الرئيسية\r\n                          </NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <NavLink className='navbar-item ' exact to=\"/movies\">\r\n                              أفلام\r\n                          </NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <NavLink className='navbar-item ' exact to=\"/Series\">\r\n                              مسلسلات\r\n                          </NavLink>\r\n                        </li>\r\n                    </ul>\r\n    )\r\n}\r\n\r\nexport default Links;","import React from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport Logo from './Logo';\r\nimport MenuBar from \"./MenuBar\";\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    searchTerm: '',\r\n  }\r\n  onChangeHandler = (e) => {\r\n    if (e.target.value) {\r\n      this.setState({\r\n        searchTerm: e.target.value,\r\n        origin: this.props.location.pathname.includes('/search') ? this.state.origin : this.props.location.pathname,\r\n      });\r\n      return this.props.history.push(`/search/${e.target.value}`);\r\n    } else {\r\n      this.setState({\r\n        searchTerm: ''\r\n      });\r\n      return this.props.history.push(this.state.origin);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <header className=\"section\" role=\"navigation\">\r\n        <div className=\"container\">\r\n          <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n          <label className=\"navbar-burger\" htmlFor=\"menu-btn\">\r\n            <span className=\"navicon\"></span>\r\n          </label>\r\n          <Logo />\r\n          <MenuBar active=\"active\"/>\r\n          <div className=\"navbar-search\">\r\n            <button><i className=\"fas fa-search\"></i></button>\r\n            <input defaultValue={this.state.searchTerm} className=\"searchInput\" type=\"text\" name=\"search\" placeholder=\"إبحث عن فيلم أو مسلسل...\" onChange={this.onChangeHandler}/>\r\n\t\t\t\t\t</div>\r\n      </div>\r\n\t\t</header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react'\r\nimport Logo from './Logo'\r\nimport MenuBar from './MenuBar'\r\nconst Footer = () =>{\r\n        return(  <footer className='section' role='navigation'>\r\n                  <div className=\"container\">\r\n                    <section className='footer-nav' role='navigation'>\r\n                    <Logo classes=\"grayscale\"/>\r\n                    <MenuBar />\r\n                    </section>\r\n                  </div>\r\n                </footer>\r\n        );\r\n}\r\n\r\nexport default Footer;","import React,{useState} from 'react'\r\nimport Data from './../data/movies.json'\r\nimport {FaArrowAltCircleRight, FaArrowAltCircleLeft} from 'react-icons/fa'\r\nimport movies from './../data/movies.json'\r\nimport {NavLink} from \"react-router-dom\";\r\nconst trimExtension = filename => filename.split('.').slice(0, -1)[0];;\r\n\r\nconst Hero = ({slides}) => {\r\n    const [current, setCurrent] = useState(0)\r\n    const length = slides.length;\r\n\r\n    const nextSlider = () => {\r\n        setCurrent(current === length - 1 ? 0 : current + 1)\r\n        clearTimeout(Time)\r\n    }\r\n    const prevtSlider = () => {\r\n        setCurrent(current === 0 ? length - 1 : current - 1)\r\n        clearTimeout(Time)\r\n    }\r\n    let Time = setTimeout( nextSlider, 15000);\r\n    if(!Array.isArray(slides) || slides.length <=0){\r\n        return null\r\n    }\r\n    return (\r\n        <>\r\n            <FaArrowAltCircleLeft className='left-arrow' onClick={prevtSlider}/>\r\n            <FaArrowAltCircleRight className='right-arrow' onClick={nextSlider}/>\r\n            {movies.map((slide, index) =>{\r\n            return (\r\n                <div className={index === current ? \"slidee active\" : 'slidee'} key={index}>\r\n                {index === current && \r\n                ( \r\n\r\n                <section className='hero featuredMovies has-bullest'\r\n                    style={{backgroundImage:`url(https://image.tmdb.org/t/p/w200${slide.backdropPath})`} } \r\n                 >\r\n                     \r\n                    <div id='bg'>\r\n                     <div className='container'>\r\n                    <div className='slide featured'>\r\n                    <h2 className=\"featured-title\">{slide.movieLanguages[0].title}</h2>\r\n                    <p className=\"featured-overview\">{slide.movieLanguages[0].overview}\r\n                    </p>\r\n                    <p className='buttons'>\r\n                        <NavLink exact to={`/details${trimExtension(slide.posterPath)}`} className='button is-primary'>\r\n                            شاهد الفلم\r\n                        </NavLink>\r\n                        <NavLink  exact to={`/details${trimExtension(slide.posterPath)}`} className='button '>\r\n                            أقرء المزيد\r\n                        </NavLink>\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </section>\r\n                \r\n                )}\r\n          \r\n            </div>\r\n            )\r\n            })}\r\n    </>\r\n)\r\n}\r\n\r\nexport default Hero;","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst trimExtension = filename => filename.split('.').slice(0, -1)[0];;\r\nconst Movie = props =>{\r\n\r\n        return (\r\n                    <li className='movie'>\r\n                    <NavLink exact to={`/details${trimExtension(props.movie.posterPath)}`}>\r\n                          <img src={`https://image.tmdb.org/t/p/w200${props.movie.posterPath}`}\r\n                           alt={props.movie.originalTitle} \r\n                           />\r\n                            <span className='movie-description'>\r\n                            {props.movie.movieLanguages[0].title}\r\n                            <span className='play-icon'>\r\n                            {props.movie.voteAverage} التقييم\r\n                            </span>\r\n                            </span>\r\n                        </NavLink>\r\n                    </li>\r\n        )\r\n}\r\n\r\nexport default Movie;","import React from 'react'\r\nimport Movie from './Movie'\r\n\r\nconst MovieGraid = props =>{\r\n    const movies = props.movies.slice(0,props.limit)\r\n    const movieList = movies.map(movie => {\r\n        return  <Movie \r\n        key={movie.posterPath}\r\n        movie={movie} />\r\n\r\n    })\r\n    return(\r\n        <section className={`section movies slider has-arrows ${props.gridType}`} id='scrollbar'>\r\n                <h3 className='section-title'>{props.title}</h3>\r\n                <ul className='moviesGrid'  id='scrollbar'>\r\n                   {movieList}\r\n                </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MovieGraid;","export const getMovieTitle = (movie) => {\r\n    return (movie.movieLanguages[0]) ? movie.movieLanguages[0].title : movie.originalTitle;\r\n  }\r\n  \r\n  export const getMovieOverview = (movie) => {\r\n    return (movie.movieLanguages[0]) ? movie.movieLanguages[0].overview : movie.originalOverview;\r\n  }\r\n  \r\n  export const suggestedMovies = (data) => {\r\n    return data.filter(movie => movie.originalTitle);\r\n  }\r\n  \r\n  export const mostViwed = (data) => {\r\n    const moviesCopy = [...data];\r\n    return moviesCopy.sort((movie1, movie2) => movie1.popularity > movie2.popularity ? -1 : 1);\r\n  }\r\n  \r\n  export const recentRelease = (data, category) => {\r\n    const moviesCopy = [...data];\r\n    const filteredDate = moviesCopy.filter(movie => movie.category === category);\r\n    return filteredDate.sort((date1, date2) => new Date(date1.releaseDate) > new Date(date2.releaseDate) ? -1 : 1);\r\n  }\r\n  export const recentRelease2 = (data, category) => {\r\n    const moviesCopy = [...data];\r\n    const filteredDate = moviesCopy.filter(movie => movie.language === category);\r\n    return filteredDate.sort((date1, date2) => new Date(date1.releaseDate) < new Date(date2.releaseDate) ? -1 : 1);\r\n  }","import React from 'react'\r\nimport Hero from './../components/Hero'\r\nimport Data from './../data/movies.json'\r\nimport MovieGraid from './../components/MovieGraid'\r\nimport {suggestedMovies, mostViwed, recentRelease, recentRelease2} from './../utils/helper'\r\n\r\nclass HomePage extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n         <Hero slides={Data}/>\r\n         <MovieGraid \r\n            title='أقتراحتنا لك' \r\n            gridType='is-suggested'\r\n            movies={suggestedMovies(this.props.movies)}\r\n            limit={10}\r\n            />\r\n          <MovieGraid\r\n             title='الاكثر مشاهدات' \r\n             gridType='is-suggested'\r\n             movies={mostViwed(this.props.movies)}\r\n             limit={10}\r\n             />\r\n          <MovieGraid \r\n            title='الافلام الحديثة' \r\n            gridType='is-suggested'\r\n            movies={recentRelease(this.props.movies, 'Film')}\r\n            limit={10}\r\n            />\r\n          <MovieGraid \r\n            title='أحدث المسلسلات' \r\n            gridType='is-suggested'\r\n            movies={recentRelease2(this.props.movies, 'en')}\r\n            limit={10}\r\n            />\r\n         </>\r\n         )\r\n    }\r\n}\r\n\r\nexport default HomePage","import React from \"react\";\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: \"\"}\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n  }\r\n\r\n  onChangeHandler(event) {\r\n    this.props.onSelectChange(event.target.value);\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"filter\">\r\n        <div className=\"container\">\r\n          <form>\r\n            <label className=\"movieTypeLabel\" htmlFor=\"movieType\">{this.props.type}</label>\r\n            <select className=\"movieTypeSelect\" id=\"movieType\" onChange={this.onChangeHandler}>\r\n              <option value=\"\">{this.props.optionText}</option>\r\n              <option value=\"Action\">الأكشن</option>\r\n              <option value=\"Thriller\">الغموض</option>\r\n              <option value=\"Drama\">الدراما</option>\r\n              <option value=\"Comedy\">الكوميدي</option>\r\n            </select>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport MovieGrid from \"../components/MovieGraid\";\r\nimport Filter from '../components/Filter';\r\nimport { suggestedMovies, mostViwed, recentRelease } from '../utils/helper';\r\nclass CategoryPage extends React.Component {\r\n  state = {\r\n    filter: null,\r\n  }\r\n\r\n  onFilter = (value) => {\r\n    // TODO Athough: Do you think it's a good idea to keep the filters also in the URL ? maybe this is a good idea for an excersise that the students can do according to what we did in the search ;-)\r\n    this.setState({ filter: value })\r\n  }\r\n\r\n  renderMoviesGrid = () => {\r\n    return (\r\n      <>\r\n        <MovieGrid\r\n          gridType=\"is-suggested\"\r\n          title=\"إقتراحتنا لك\"\r\n          limit={10}\r\n          movies={suggestedMovies(this.props.movies)}\r\n        />\r\n        <MovieGrid\r\n          gridType=\"is-suggested\"\r\n          title=\"الأكثر مشاهدة\"\r\n          limit={10}\r\n          movies={mostViwed(this.props.movies)}\r\n        />\r\n        <MovieGrid\r\n          gridType=\"is-suggested\"\r\n          title={`أحدث ${this.props.typeText}`}\r\n          limit={90}\r\n          movies={recentRelease(this.props.movies, this.props.type)}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderFilterResult = () => {\r\n    const filteredMovies = this.props.movies.filter(movie => movie.genres.includes(this.state.filter))\r\n    return (\r\n      <MovieGrid\r\n        gridType=\"is-suggested\"\r\n        // TODO Athough: What do you think about this ? Here we can use a helper function with a switch to translate english names into arabic names ex. Thriller => أفلام الغموض أو مسلسلات الغموض\r\n        title={this.state.filter}\r\n        movies={filteredMovies}/>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Filter \r\n        type={this.props.typeText} \r\n        optionText={this.props.optionText} \r\n        onSelectChange={this.onFilter} \r\n        />\r\n        {this.state.filter ? this.renderFilterResult() : this.renderMoviesGrid()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryPage;","import React from 'react';\r\nimport MovieGrid from \"../components/MovieGraid\";\r\n\r\nclass SearchPage extends React.Component {\r\n  state = {\r\n    searchTerm: \"\"\r\n  }\r\n  render() {\r\n    const searchResult = this.props.movies.filter((movie) => {\r\n    const regex = new RegExp(this.props.match.params.keyword, 'gi');\r\n      //TODO Tony: Maybe let's extend the search here to include movie description in both languages ;-)\r\n      let ret = false;\r\n      if (\r\n        movie.originalTitle.match(regex)\r\n        || movie.originalOverview.match(regex)\r\n        || (\r\n            movie.movieLanguages[0] &&\r\n            (\r\n              movie.movieLanguages[0].title.match(regex)\r\n              || movie.movieLanguages[0].overview.match(regex)\r\n            )\r\n          )\r\n      ) {\r\n        return true;\r\n      }\r\n    });\r\n    return (<MovieGrid\r\n      gridType=\"search-results\"\r\n      title={`نتيجة البحث عن  - ${this.props.match.params.keyword}`}\r\n      limit={searchResult.length}\r\n      movies={searchResult}\r\n      history={this.props.history}\r\n    />);\r\n  }\r\n}\r\n\r\nexport default SearchPage;","import React from 'react';\r\nimport { getMovieTitle, getMovieOverview } from '../utils/helper';\r\n\r\n\r\nclass Details extends React.Component {\r\n\r\n  render() {\r\n    const movieId = this.props.match.params.id;\r\n    const movie = this.props.movies.find(movie => movie.posterPath.includes(movieId))\r\n    const genres = movie.genres.join(\" | \");\r\n    const language = (movie.language == 'en' ) ? 'الانكليزية' :'العربية';\r\n    return (\r\n      <>\r\n        <section className=\"section hero movieDetails has-bullets\">\r\n          <div className=\"container\">\r\n            <div className=\"movieVideo\">\r\n              <iframe src={`https://www.youtube.com/embed/${movie.movieVideos.key}`}\r\n                frameBorder='0'\r\n                title='video'\r\n              />\r\n            </div>\r\n            {/* <div className=\"movieDetails container\">\r\n              <h2 className=\"featured-title\">{getMovieTitle(movie)}</h2>\r\n              <p className=\"featured-overview\">{getMovieOverview(movie)}</p>\r\n              <p className=\"movie-general-data\">{movie.releaseDate}</p>\r\n            </div> */}\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"section movie-meta-data\">\r\n          <div className=\"container\">\r\n            {/* <h3 className=\"section-title\">{`${getMovieTitle(movie)}`}</h3> */}\r\n            <div className=\"plot\">\r\n              <h3 className=\"section-title\">{`${getMovieTitle(movie)}`}</h3>\r\n              <p>{getMovieOverview(movie)}</p>\r\n            </div>\r\n            <ul>\r\n              <li>\r\n                <span className=\"title\">النوع</span>\r\n                <span className=\"values\">{genres}</span>\r\n                <span className=\"title\">تاريخ الاصدار</span>\r\n                <span className=\"values\">{movie.releaseDate}</span>\r\n                <span className=\"title\">عدد المشاهدات</span>\r\n                <span className=\"values\">{movie.popularity}</span>\r\n                <span className=\"title\">التقييم</span>\r\n                <span className=\"values\">{movie.voteAverage}</span>\r\n                <span className=\"title\">اللغة</span>\r\n                <span className=\"values\">{language}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomePage from './pages/HomePage'\nimport CategoryPage from './pages/CategoryPage'\nimport SearchPage from './pages/SearchPage'\nimport Details from './pages/Details'\nimport Data from './data/movies.json'\nclass App extends React.Component {\n  state = {\n    movies : Data\n}\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"wrapper\">\n          <div className=\"container\">\n\n            <Header/>\n\n            <Route exact path='/netflux' render={props => {\n              return(\n                <HomePage {...props} movies={this.state.movies} />\n                )\n            }} />\n\n            <Route exact path='/movies' render={props => {\n              return(\n                <CategoryPage \n                {...props} \n                type='Film' \n                typeText='أفلام'\n                optionText = 'نوع الافلام' \n                movies={this.state.movies} />\n              )\n            }} />\n\n            <Route exact path='/Series' render={props => {\n              return(\n                <CategoryPage \n                {...props} \n                type='Series' \n                typeText='مسلسلات'\n                optionText = 'نوع المسلسلات' \n                movies={this.state.movies} />\n              )\n            }} />\n\n            <Route exact path='/details/:id' render={props => {\n              return(\n                <Details {...props} movies={this.state.movies}/>\n              )\n            }} />\n\n            <Route exact path='/search/:keyword' \n            render = {props => <SearchPage {...props} movies = {this.state.movies} />}\n             />\n\n            <Footer/>\n\n          </div>\n        </div>\n        \n      {/* <ImageSlide slides={Data}/> */}\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  window.location.hostname === 'https://hashafai.github.io/' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\nimport './style/all.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}